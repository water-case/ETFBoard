package com.myboard.etfboard.member.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.myboard.etfboard.member.service.MemberService;
import com.myboard.etfboard.member.vo.MemberVO;



@Controller("memberController")
//@EnableAspectJAutoProxy
public class MemberControllerImpl implements MemberController {
	private static final Logger logger = LoggerFactory.getLogger(MemberControllerImpl.class);
	@Autowired
	private MemberService memberService;
	@Autowired
	private MemberVO memberVO;
	
	// 회원가입
	@Override
	@RequestMapping(value="/member/join.do" ,method = RequestMethod.POST)
	public ModelAndView memberJoin(@ModelAttribute("member") MemberVO member, HttpServletRequest request, HttpServletResponse response) throws Exception {
		request.setCharacterEncoding("utf-8");
		// id, email 중복조회(ajax로)
		// id와 이메일이 중복되지 않으면 db에 sql문을 실행한다
		int result = memberService.addMember(member);
		ModelAndView mav = new ModelAndView("redirect:/member/joinSuccess");
		return mav;
	}
	// 회원가입 성공
	@Override
	@RequestMapping(value="/member/joinSuccess", method=RequestMethod.GET)
	public String viewJoinSuccess(HttpServletRequest request, HttpServletResponse response) throws Exception {
		return "/member/joinSuccess";
	}
	
	// 로그인
	@Override
	@RequestMapping(value="/member/login.do" ,method = RequestMethod.POST)
	public ModelAndView memberLogin(@ModelAttribute("member") MemberVO member, RedirectAttributes rAttr, HttpServletRequest request, HttpServletResponse response) throws Exception {
		request.setCharacterEncoding("utf-8");
		ModelAndView mav = new ModelAndView();
		memberVO = memberService.login(member);
		if(memberVO != null) {
			HttpSession session = request.getSession();
			session.setAttribute("member", memberVO);
			session.setAttribute("isLogOn", true);
			mav.setViewName("redirect:/member/loginSuccess");
		}else {
			rAttr.addAttribute("result","loginFailed");
			mav.setViewName("redirect:/member/login");
		}
		return mav;
	}
	// 로그인 성공
	@Override
	@RequestMapping(value="/member/loginSuccess", method=RequestMethod.GET)
	public String loginSuccess(HttpServletRequest request, HttpServletResponse response) throws Exception {
		return "/main";
	}
	// 로그아웃
	@Override
	@RequestMapping(value = "/member/logout.do", method =  RequestMethod.GET)
	public ModelAndView memberLogout(HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		session.removeAttribute("member");
		session.removeAttribute("isLogOn");
		ModelAndView mav = new ModelAndView();
		
		// 로그아웃하면 메인이 아니라 현재페이지로 가도록 만들기
		mav.setViewName("redirect:/");
		return mav;
	}	
	
}
